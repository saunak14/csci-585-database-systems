-- Using  Oracle Database 19c on https://livesql.oracle.com/

CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID INT,
    NAME VARCHAR2(255),
    OFFICE_NO INT,
    FLOOR_NO INT CHECK(FLOOR_NO BETWEEN 1 AND 10),
    PHONE_NO INT,
    EMAIL_ID VARCHAR2(255),
    PRIMARY KEY (EMPLOYEE_ID)
);

CREATE TABLE MEETING (
    MEETING_ID INT,
    ROOM_NO INT,
    FLOOR_NO INT CHECK(FLOOR_NO BETWEEN 1 AND 10),
    MEETING_START_TIME INT CHECK(MEETING_START_TIME BETWEEN 8 AND 18),
    PRIMARY KEY (MEETING_ID)
);

CREATE TABLE MEETING_ATTENDEES (
    MEETING_ID INT,
    EMPLOYEE_ID INT,
    FOREIGN KEY (MEETING_ID) REFERENCES MEETING(MEETING_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
);

CREATE TABLE NOTIFICATION (
    NOTIFICATION_ID INT,
    EMPLOYEE_ID INT,
    NOTIFICATION_DATE DATE,
    NOTIFICATION_TYPE VARCHAR2(10) CHECK (NOTIFICATION_TYPE IN ('mandatory', 'optional')),
    MEETING_ID INT,
    PRIMARY KEY (NOTIFICATION_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID),
    FOREIGN KEY (MEETING_ID) REFERENCES MEETING(MEETING_ID)
);

CREATE TABLE SCAN (
    SCAN_ID INT,
    SCAN_DATE DATE,
    SCAN_TIME INT CHECK(SCAN_TIME BETWEEN 0 AND 23),
    EMPLOYEE_ID INT,
    DATE_REPORTED DATE,
    SYMPTOM_ID INT CHECK(SYMPTOM_ID BETWEEN 1 AND 5),
    PRIMARY KEY (SCAN_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
);

CREATE TABLE SYMPTOM (
    SYMPTOM_ROW_ID INT,
    EMPLOYEE_ID INT,
    DATE_REPORTED DATE,
    SYMPTOM_ID INT CHECK(SYMPTOM_ID BETWEEN 1 AND 5),
    TEST_ID INT,
    PRIMARY KEY (SYMPTOM_ROW_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
    -- FOREIGN KEY (TEST_ID) REFERENCES TEST(TEST_ID)
);

CREATE TABLE TEST (
    TEST_ID INT,
    LOCATION VARCHAR2(255),
    TEST_DATE DATE,
    TEST_TIME INT CHECK(TEST_TIME BETWEEN 0 AND 23),
    EMPLOYEE_ID INT,
    TEST_RESULT VARCHAR2(10) CHECK (TEST_RESULT IN ('positive', 'negative')),
    SYMPTOM_ROW_ID INT,
    SCAN_ID INT,
    PRIMARY KEY (TEST_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID),
    FOREIGN KEY (SYMPTOM_ROW_ID) REFERENCES SYMPTOM(SYMPTOM_ROW_ID),
    FOREIGN KEY (SCAN_ID) REFERENCES SCAN(SCAN_ID)
);

ALTER TABLE SYMPTOM ADD FOREIGN KEY (TEST_ID) REFERENCES TEST(TEST_ID);

CREATE TABLE CASE (
    CASE_ID INT,
    EMPLOYEE_ID INT,
    CASE_DATE DATE,
    RESOLUTION VARCHAR2(20) CHECK (RESOLUTION IN ('back to work', 'left the company', 'deceased')),
    TEST_ID INT,
    PRIMARY KEY (CASE_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID),
    FOREIGN KEY (TEST_ID) REFERENCES TEST(TEST_ID)
);

CREATE TABLE HEALTH_STATUS (
    HEALTH_STATUS_ROW_ID INT,
    EMPLOYEE_ID INT,
    HEALTH_STATUS_DATE DATE,
    STATUS VARCHAR2(20) CHECK (STATUS IN ('sick', 'hospitalized', 'well')),
    PRIMARY KEY (HEALTH_STATUS_ROW_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
);

-- Inserts:
INSERT INTO EMPLOYEE VALUES(10, 'Saunak Sahoo', 1, 1, 2136198119, 'saunaksa@usc.edu');
INSERT INTO EMPLOYEE VALUES(11, 'John Doe', 1, 1, 2136198120, 'john@usc.edu');
INSERT INTO EMPLOYEE VALUES(12, 'Satish Velagapudi', 1, 1, 2136198123, 'satish@usc.edu');
INSERT INTO EMPLOYEE VALUES(13, 'Debaditya Pal', 1, 2, 2136198125, 'deba@usc.edu');
INSERT INTO EMPLOYEE VALUES(14, 'Sameer Agarwal', 1, 2, 2136198127, 'sameer@usc.edu');
INSERT INTO EMPLOYEE VALUES(15, 'Harjot Singh', 2, 3, 2136198122, 'harjot@usc.edu');
INSERT INTO EMPLOYEE VALUES(16, 'Rishabh Singh', 2, 3, 2136198121, 'rishab@usc.edu');
INSERT INTO EMPLOYEE VALUES(17, 'Person1 lastname', 2, 3, 2136198128, 'person1@usc.edu');
INSERT INTO EMPLOYEE VALUES(18, 'Person2 lastname', 2, 4, 2136198129, 'person2@usc.edu');
INSERT INTO EMPLOYEE VALUES(19, 'Person3 lastname', 2, 5, 2136198130, 'person3@usc.edu');
INSERT INTO EMPLOYEE VALUES(20, 'Person1 lastname', 2, 5, 2136198131, 'person4@usc.edu');
INSERT INTO EMPLOYEE VALUES(21, 'Person5 lastname', 2, 5, 2136198132, 'person5@usc.edu');
INSERT INTO EMPLOYEE VALUES(22, 'Person6 lastname', 2, 5, 2136198133, 'person6@usc.edu');
INSERT INTO EMPLOYEE VALUES(23, 'Person7 lastname', 2, 5, 2136198134, 'person7@usc.edu');
INSERT INTO EMPLOYEE VALUES(24, 'Person8 lastname', 2, 6, 2136198135, 'person8@usc.edu');
INSERT INTO EMPLOYEE VALUES(29, 'Person9 lastname', 2, 6, 2136198136, 'person9@usc.edu');
INSERT INTO EMPLOYEE VALUES(30, 'Person10 lastname', 2, 6, 2136198137, 'person10@usc.edu');
INSERT INTO EMPLOYEE VALUES(31, 'Person11 lastname', 2, 6, 2136198138, 'person11@usc.edu');
INSERT INTO EMPLOYEE VALUES(32, 'Person12 lastname', 2, 7, 2136198139, 'person12@usc.edu');
INSERT INTO EMPLOYEE VALUES(33, 'Person13 lastname', 2, 7, 2136198140, 'person13@usc.edu');

INSERT INTO MEETING VALUES(100, 1, 1, 8);
INSERT INTO MEETING VALUES(101, 2, 3, 9);
INSERT INTO MEETING VALUES(102, 3, 8, 10);
INSERT INTO MEETING VALUES(103, 4, 8, 11);
INSERT INTO MEETING VALUES(104, 5, 8, 12);
INSERT INTO MEETING VALUES(105, 6, 9, 13);

INSERT INTO MEETING_ATTENDEES VALUES(100, 10);
INSERT INTO MEETING_ATTENDEES VALUES(100, 11);
INSERT INTO MEETING_ATTENDEES VALUES(100, 12);
INSERT INTO MEETING_ATTENDEES VALUES(100, 13);
INSERT INTO MEETING_ATTENDEES VALUES(100, 14);
INSERT INTO MEETING_ATTENDEES VALUES(101, 15);
INSERT INTO MEETING_ATTENDEES VALUES(101, 16);
INSERT INTO MEETING_ATTENDEES VALUES(101, 17);
INSERT INTO MEETING_ATTENDEES VALUES(102, 18);
INSERT INTO MEETING_ATTENDEES VALUES(102, 19);
INSERT INTO MEETING_ATTENDEES VALUES(102, 20);
INSERT INTO MEETING_ATTENDEES VALUES(103, 21);
INSERT INTO MEETING_ATTENDEES VALUES(103, 22);
INSERT INTO MEETING_ATTENDEES VALUES(103, 23);
INSERT INTO MEETING_ATTENDEES VALUES(104, 24);
INSERT INTO MEETING_ATTENDEES VALUES(104, 29);
INSERT INTO MEETING_ATTENDEES VALUES(104, 30);
INSERT INTO MEETING_ATTENDEES VALUES(105, 31);
INSERT INTO MEETING_ATTENDEES VALUES(105, 32);
INSERT INTO MEETING_ATTENDEES VALUES(105, 33);

--Employee Id 10 reports symptoms and tests positive
INSERT INTO SYMPTOM VALUES(1, 10, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 1, null);
INSERT INTO TEST VALUES(1, 'Company', TO_DATE('2023-09-10', 'YYYY-MM-DD'), 14, 10, 'positive', 1, null);
UPDATE SYMPTOM SET TEST_ID = 1 WHERE SYMPTOM_ROW_ID = 1;
INSERT INTO CASE VALUES(1, 10, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'back to work', 1);
INSERT INTO HEALTH_STATUS VALUES(1, 10, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'well');

-- Employee id 20 is scanned and exhibits symptoms, tests positive
INSERT INTO SCAN VALUES(1, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 9, 20, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 2);
INSERT INTO TEST VALUES(2, 'Company', TO_DATE('2023-09-11', 'YYYY-MM-DD'), 11, 20, 'positive', null, 1);
INSERT INTO CASE VALUES(2, 20, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'left the company', 2);
INSERT INTO HEALTH_STATUS VALUES(2, 20, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'sick');

-- Notifications are sent to all employees in close contact with the above 2 employees
-- Notifications for people who attended common meetings with the above 2 employees
INSERT INTO NOTIFICATION VALUES(1, 11, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'mandatory', 100);
INSERT INTO NOTIFICATION VALUES(2, 12, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'mandatory', 100);
INSERT INTO NOTIFICATION VALUES(3, 13, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'mandatory', 100);
INSERT INTO NOTIFICATION VALUES(4, 14, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'mandatory', 100);

INSERT INTO NOTIFICATION VALUES(5, 18, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'mandatory', 102);
INSERT INTO NOTIFICATION VALUES(6, 19, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'mandatory', 102);

--Notifications for people who are on the same floor as the 2 sick employees
INSERT INTO NOTIFICATION VALUES(7, 11, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'optional', null);
INSERT INTO NOTIFICATION VALUES(8, 12, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'optional', null);

INSERT INTO NOTIFICATION VALUES(9, 19, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'optional', null);
INSERT INTO NOTIFICATION VALUES(10, 21, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'optional', null);
INSERT INTO NOTIFICATION VALUES(11, 22, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'optional', null);
INSERT INTO NOTIFICATION VALUES(12, 23, TO_DATE('2023-09-11', 'YYYY-MM-DD'), 'optional', null);

-- People with NOTIFICATION_TYPE = 'mandatory' were tested
INSERT INTO TEST VALUES(3, 'Hospital', TO_DATE('2023-09-12', 'YYYY-MM-DD'), 14, 11, 'positive', null, null);
INSERT INTO TEST VALUES(4, 'Hospital', TO_DATE('2023-09-12', 'YYYY-MM-DD'), 15, 12, 'positive', null, null);
INSERT INTO TEST VALUES(5, 'Clinic', TO_DATE('2023-09-12', 'YYYY-MM-DD'), 15, 13, 'positive', null, null);
INSERT INTO TEST VALUES(6, 'Clinic', TO_DATE('2023-09-12', 'YYYY-MM-DD'), 11, 13, 'positive', null, null);

INSERT INTO TEST VALUES(7, 'Clinic', TO_DATE('2023-09-13', 'YYYY-MM-DD'), 16, 18, 'negative', null, null);
INSERT INTO TEST VALUES(8, 'Clinic', TO_DATE('2023-09-13', 'YYYY-MM-DD'), 16, 19, 'negative', null, null);
-- In addition, some people with NOTIFICATION_TYPE = 'optional' got tested
INSERT INTO TEST VALUES(9, 'Clinic', TO_DATE('2023-09-13', 'YYYY-MM-DD'), 16, 21, 'negative', null, null);
INSERT INTO TEST VALUES(10, 'Clinic', TO_DATE('2023-09-13', 'YYYY-MM-DD'), 16, 23, 'negative', null, null);

--From the above whoever tested positive was included in the case and health status table
INSERT INTO CASE VALUES(3, 11, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'back to work', 3);
INSERT INTO CASE VALUES(4, 12, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'deceased', 4);
INSERT INTO CASE VALUES(5, 13, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'left the company', 5);
INSERT INTO CASE VALUES(6, 13, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'back to work', 5);

INSERT INTO HEALTH_STATUS VALUES(3, 11, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'well');
INSERT INTO HEALTH_STATUS VALUES(4, 12, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'hospitalized');
INSERT INTO HEALTH_STATUS VALUES(5, 13, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'sick');
INSERT INTO HEALTH_STATUS VALUES(6, 14, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 'well');
